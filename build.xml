<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="help" name="I2P-Bote">
    <property name="i2pbase" value="../i2p"/>
    <property name="i2plib" value="${i2pbase}/core/java/build"/>
    <property name="jettylib" value="${i2pbase}/apps/jetty/jettylib"/>
    <property name="antlib" value="${jettylib}"/>
    <property name="jstllib" value="${i2pbase}/apps/susidns/src/WEB-INF/lib"/>
    <property name="lib" value="WebContent/WEB-INF/lib"/>
    <property name="mstream" value="${i2pbase}/apps/ministreaming/java/build"/>
    <property name="stream" value="${i2pbase}/apps/streaming/java/build"/>
    <property name="makeplugin" value="../i2p.scripts/plugin/makeplugin.sh"/>
    <property name="router" value="${i2pbase}/router/java/build"/>
    <property name="tunnel" value="${i2pbase}/apps/i2ptunnel/java/build"/>
    <path id="cp">
        <pathelement path="${java.class.path}" />
        <pathelement location="${i2plib}/i2p.jar" />
        <pathelement location="${jettylib}/org.mortbay.jetty.jar"/>
        <pathelement location="${jettylib}/jasper-compiler.jar" />
        <pathelement location="${jettylib}/jasper-runtime.jar" />
        <pathelement location="${jettylib}/javax.servlet.jar" />
        <pathelement location="${jettylib}/commons-logging.jar" />
        <pathelement location="${jettylib}/commons-el.jar" />
        <pathelement location="${jstllib}/jstl.jar" />
        <pathelement location="${jstllib}/standard.jar" />
        <pathelement location="${lib}/mailapi.jar" />
        <pathelement location="${lib}/bcprov-ecc-jdk16-145.jar" />
        <pathelement location="${mstream}/mstreaming.jar" />
        <pathelement location="${stream}/streaming.jar" />
        <pathelement location="${router}/router.jar" />
        <pathelement location="${tunnel}/i2ptunnel.jar" />
        
    </path>
    <target name="help">
        <echo message="Useful targets:" />
        <echo message="  war:    Makes a .war file" />
        <echo message="  plugin: Makes a I2P plugin. Only runs on Linux;" />
        <echo message="          $I2P must point to an I2P installation." />
        <echo message="  all:    war + plugin" />
        <echo message="  src:    Zips up the source code" />
        <echo message="  junit:  Runs all unit tests" />
    </target>

    <target name="all" depends="clean, war, plugin" />

    <target name="compile">
        <mkdir dir="./ant_build" />
        <mkdir dir="./ant_build/classes" />
        <javac
            srcdir="./src"
            debug="true"
            deprecation="on"
            destdir="./ant_build/classes"
            classpathref="cp"
            failonerror="true" />
    </target>

    <target name="precompilejsp">
        <mkdir dir="ant_build" />
        <mkdir dir="ant_build/jspjava" />
        <path id="jspcp">
            <path refid="cp" />
            <pathelement location="ant_build/classes" />
        </path>
        <java classname="org.apache.jasper.JspC" fork="true" classpathref="jspcp" failonerror="true">
            <arg value="-d" />
            <arg value="ant_build/jspjava" />
            <arg value="-v" />
            <arg value="-p" />
            <arg value="i2p.bote.jsp" />
            <arg value="-webinc" />
            <arg value="ant_build/web-fragment.xml" />
            <arg value="-webapp" />
            <arg value="WebContent" />
        </java>

        <javac
            debug="true"
            deprecation="on"
            destdir="ant_build/classes"
            srcdir="./ant_build/jspjava"
            includes="**/*.java"
            classpathref="jspcp"
            failonerror="true" />
        <copy file="WebContent/WEB-INF/web.xml" tofile="ant_build/web.xml" />
        <loadfile property="jspc.web.fragment" srcfile="ant_build/web-fragment.xml" />
        <replace file="ant_build/web.xml">
            <replacefilter token="&lt;!-- precompiled servlets --&gt;" value="${jspc.web.fragment}" />
        </replace>
    </target>

    <target name="war" depends="compile,precompilejsp,bundle"> 
        <mkdir dir="ant_build" />
        <war destfile="i2pbote.war" webxml="ant_build/web.xml">
            <classes dir="ant_build/classes" includes="**/*.class" />
            <classes dir="src" includes="i2p/bote/network/built-in-peers.txt" />
            <fileset dir="WebContent" includes="index.html"/>
            <fileset dir="WebContent" includes="*.css"/>
            <fileset dir="WebContent/" includes="*.xml"/>
            <webinf dir="WebContent/WEB-INF/tlds" includes="*.tld"/>
            <lib file="${lib}/mailapi.jar"/>
            <lib file="${lib}/bcprov-ecc-jdk16-145.jar"/>
          <zipfileset dir="WebContent/images" prefix="images"/>
        </war>

        <echo message="SHA256 sum:"/>
        <exec executable="sha256sum">
            <arg value="i2pbote.war"/>
        </exec>
    </target>
    
    <!--
      - Make two plugins, one for initial installs and one for updates.
      - Only the initial install includes mailapi.jar.
      - Neither includes jstl.jar or standard.jar, as any i2p version that has
      - plugin support has these two jars pulled out of susidns.war and put in
      - $I2P/lib. We set the classpath in webapps.config to find them.
    -->
    <target name="plugin" depends="pluginwar,getversion"> 
        <mkdir dir="plugin/plugin.tmp/lib" />
        <mkdir dir="plugin/plugin.tmp/console/webapps" />
        <copy file="plugin/webapps.config" todir="plugin/plugin.tmp/console/" />

        <!-- run i2pbote-plugin.war through pack200 -->
        <move file="i2pbote-plugin.war" tofile="plugin/plugin.tmp/console/webapps/i2pbote.jar" />
        <exec executable="pack200" failifexecutionfails="true">
            <arg value="--no-gzip"/>
            <arg value="--effort=9"/>
            <arg value="--modification-time=latest"/>
            <arg value="plugin/plugin.tmp/console/webapps/i2pbote.war.pack"/>
            <arg value="plugin/plugin.tmp/console/webapps/i2pbote.jar"/>
        </exec>
        <delete file="plugin/plugin.tmp/console/webapps/i2pbote.jar" />
        <!-- run bcprov-ecc-jdk16-145.jar through pack200 -->
        <exec executable="pack200" failifexecutionfails="true">
            <arg value="--no-gzip"/>
            <arg value="--effort=9"/>
            <arg value="--modification-time=latest"/>
            <arg value="plugin/plugin.tmp/lib/bcprov-ecc-jdk16-145.jar.pack"/>
            <arg value="${lib}/bcprov-ecc-jdk16-145.jar"/>
        </exec>

        <delete file="plugin/plugin.tmp/lib/mailapi.jar" />
        <delete file="plugin/plugin.tmp/lib/mailapi.jar.pack" />

        <!-- get build number -->
        <buildnumber file="plugin/build.number" />

        <!-- make the update xpi2p -->
        <copy file="plugin/plugin.config" todir="plugin/plugin.tmp" overwrite="true" />
        <exec executable="echo" osfamily="unix" failifexecutionfails="true" output="plugin/plugin.tmp/plugin.config" append="true">
            <arg value="version=${version}-b${build.number}" />
        </exec>
        <exec executable="echo" osfamily="unix" failifexecutionfails="true" output="plugin/plugin.tmp/plugin.config" append="true">
            <arg value="update-only=true" />
        </exec>
        <exec executable="${makeplugin}" failifexecutionfails="true" >
            <arg value="plugin/plugin.tmp" />
        </exec>
        <move file="i2pbote.xpi2p" tofile="i2pbote-update.xpi2p" />

        <!-- make the install xpi2p -->
        <exec executable="pack200" failifexecutionfails="true">
            <arg value="--no-gzip"/>
            <arg value="--effort=9"/>
            <arg value="--modification-time=latest"/>
            <arg value="plugin/plugin.tmp/lib/mailapi.jar.pack"/>
            <arg value="${lib}/mailapi.jar"/>
        </exec>
        <copy file="plugin/plugin.config" todir="plugin/plugin.tmp" overwrite="true" />
        <exec executable="echo" osfamily="unix" failifexecutionfails="true" output="plugin/plugin.tmp/plugin.config" append="true">
            <arg value="version=${version}-b${build.number}" />
        </exec>
        <exec executable="${makeplugin}" >
            <arg value="plugin/plugin.tmp" />
        </exec>
    </target>

    <!-- same as war but without the library jars -->
    <target name="pluginwar" depends="compile,precompilejsp,bundle"> 
        <mkdir dir="ant_build" />
        <war destfile="i2pbote-plugin.war" webxml="ant_build/web.xml">
            <classes dir="ant_build/classes" includes="**/*.class" />
            <classes dir="src" includes="i2p/bote/network/built-in-peers.txt" />
            <fileset dir="WebContent" includes="index.html"/>
            <fileset dir="WebContent" includes="*.css"/>
            <fileset dir="WebContent/" includes="*.xml"/>
            <webinf dir="WebContent/WEB-INF/tlds" includes="*.tld"/>
          <zipfileset dir="WebContent/images" prefix="images"/>
        </war>
    </target>
    
    <target name="bundle">
        <!-- Update the messages_*.po files.
             We need to supply the bat file for windows, and then change the fai
l property to true -->
        <exec executable="sh" osfamily="unix" failifexecutionfails="false" >
            <arg value="./bundle-messages.sh" />
        </exec>
        <exec executable="sh" osfamily="mac" failifexecutionfails="false" >
            <arg value="./bundle-messages.sh" />
        </exec>
        <exec executable="cmd" osfamily="windows" failifexecutionfails="false" >
            <arg value="/c" />
            <arg value="bundle-messages.bat" />
        </exec>
    </target>

    <target name="poupdate" depends="compilejspstrings">
        <!-- Update the messages_*.po files.  -->
        <exec executable="sh" osfamily="unix" failifexecutionfails="true" >
            <arg value="./bundle-messages.sh" />
            <arg value="-p" />
        </exec>
        <exec executable="sh" osfamily="mac" failifexecutionfails="true" >
            <arg value="./bundle-messages.sh" />
            <arg value="-p" />
        </exec>
        <exec executable="cmd" osfamily="windows" failifexecutionfails="true" >
            <arg value="/c" />
            <arg value="bundle-messages.bat" />
            <arg value="-p" />
        </exec>
    </target>

    <target name="compilejspstrings" depends="compile">
        <javac
            srcdir="./ant"
            debug="true"
            deprecation="on"
            destdir="./ant_build/classes"
            classpathref="cp"
            classpath="./ant_build/classes"
            failonerror="true" />
    </target>

    <target name="junit" depends="compile">
        <path id="junitcp">
            <pathelement location="${lib}/junit.jar"/>
            <pathelement location="./ant_build/classes"/>
            <path refid="cp"/>
        </path>

        <javac
            srcdir="./test"
            debug="true"
            deprecation="on"
            destdir="./ant_build/classes"
            classpathref="junitcp"
            failonerror="true" />

        <junit printsummary="off" failureproperty="failed">
            <classpath>
                <path refid="junitcp"/>
            </classpath>
            <batchtest fork="true" todir="./ant_build">
                <fileset dir="./ant_build/classes" includes="**/*Test.class"/>
                <formatter type="plain"/>
            </batchtest>
        </junit>
        <condition property="result"
            value="At least one unit test failed."
            else="All unit tests were successful.">
            <isset property="failed"/>
        </condition>
        <echo message="${result}"/>
        <echo message="For details, see ant_build/TEST*"/>
    </target>

    <!-- Write the app version into ${version} -->
    <target name="getversion" depends="compile">
        <javac
            srcdir="./ant"
            debug="true"
            deprecation="on"
            destdir="./ant_build/classes"
            classpathref="cp"
            classpath="./ant_build/classes"
            failonerror="true" />
        <java
            classname="i2p.bote.ant.PrintAppVersion"
            classpathref="cp"
            classpath="./ant_build/classes"
            outputproperty="version"
            failonerror="true"/>
        <delete dir="./ant_build/classes/i2p/bote/ant" />
        <echo message="I2P-Bote version is ${version}"/>
    </target>

    <!-- depends on compile b/c it gets the app version from I2PBote.class -->
    <target name="src" depends="getversion">
        <property name="subdir" value="i2pbote-${version}-src"/>
        <zip destfile="src.zip">
            <zipfileset dir="src" prefix="${subdir}/src"/>
            <zipfileset dir="WebContent" prefix="${subdir}/WebContent" followsymlinks="false"/>
            <zipfileset dir="test" prefix="${subdir}/test"/>
            <zipfileset dir="ant" prefix="${subdir}/ant"/>
            <zipfileset dir="doc" prefix="${subdir}/doc"/>
            <zipfileset dir="plugin" prefix="${subdir}/plugin">
                <exclude name="plugin.tmp/**"/>
            </zipfileset>
            <zipfileset file="build.xml" prefix="${subdir}"/>
            <zipfileset file="locale/messages_de.po" prefix="${subdir}/locale"/>
            <zipfileset file="bundle-messages.sh" prefix="${subdir}"/>
            <zipfileset file="jsp2po.sh" prefix="${subdir}"/>
            <zipfileset file="history.txt" prefix="${subdir}"/>
            <zipfileset file="license.txt" prefix="${subdir}"/>
        </zip>

        <echo message="SHA256 sum:"/>
        <exec executable="sha256sum">
            <arg value="src.zip"/>
        </exec>
    </target>

    <target name="clean">
        <delete dir="ant_build" />
        <delete file="i2pbote.war" />
        <delete file="i2pbote-plugin.war" />
        <delete dir="plugin/plugin.tmp" />
        <delete file="i2pbote.xpi2p" />
        <delete file="i2pbote-update.xpi2p" />
        <delete file="src.zip" />
    </target>
</project>
